version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_ZOOKEEPER:-3.7.0-debian-10-r87}
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://senzing-kafka:9092"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_KAFKA:-2.8.0-debian-10-r55}
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
#     See https://github.com/obsidiandynamics/kafdrop#environment-variables
      JVM_OPTS: "-Xms32M -Xmx64M"
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:${SENZING_DOCKER_IMAGE_VERSION_OBSIDIANDYNAMICS_KAFDROP:-3.27.0}
    networks:
      - backend
    ports:
      - 9179:9000
    restart: always

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_RECORD_MAX: ${SENZING_RECORD_MAX:-5000}
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-kafka
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-latest}
    networks:
      - backend
    restart: on-failure

  postgres:
    container_name: senzing-postgres
    environment:
#     See https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
      POSTGRES_DB: ${POSTGRES_DB:-G2}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: bitnami/postgresql:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_POSTGRESQL:-11.12.0-debian-10-r50}
    networks:
      - backend
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ${POSTGRES_DIR:-/var/lib/postgresql/data}:/var/lib/postgresql/data

  postgresinit:
    container_name: senzing-postgresql-init
    depends_on:
      - postgres
    environment:
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_SQL_FILE: /opt/senzing/g2/resources/schema/g2core-schema-postgresql-create.sql
    image: senzing/postgresql-client:${SENZING_DOCKER_IMAGE_VERSION_POSTGRESQL_CLIENT:-latest}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  phppgadmin:
    container_name: senzing-phppgadmin
    environment:
#     See https://github.com/dockage/phppgadmin#available-configuration-parameters
      - PHP_PG_ADMIN_AJAX_REFRESH=3
      - PHP_PG_ADMIN_AUTO_COMPLETE=default on
      - PHP_PG_ADMIN_DEFAULT_LANG=auto
      - PHP_PG_ADMIN_EXTRA_LOGIN_SECURITY=false
      - PHP_PG_ADMIN_HELP_BASE=http://www.postgresql.org/docs/%s/interactive/
      - PHP_PG_ADMIN_LEFT_WIDTH=200
      - PHP_PG_ADMIN_MAX_CHARS=50
      - PHP_PG_ADMIN_MAX_ROWS=30
      - PHP_PG_ADMIN_MIN_PASSWORD_LENGTH=1
      - PHP_PG_ADMIN_OWNED_ONLY=false
      - PHP_PG_ADMIN_SERVER_DEFAULT_DB=template1
      - PHP_PG_ADMIN_SERVER_DESC=PostgreSQL
      - PHP_PG_ADMIN_SERVER_HOST=senzing-postgres
      - PHP_PG_ADMIN_SERVER_PG_DUMPALL_PATH=/usr/bin/pg_dumpall
      - PHP_PG_ADMIN_SERVER_PG_DUMP_PATH=/usr/bin/pg_dump
      - PHP_PG_ADMIN_SERVER_PORT=5432
      - PHP_PG_ADMIN_SERVER_SSL_MODE=allow
      - PHP_PG_ADMIN_SHOW_ADVANCED=false
      - PHP_PG_ADMIN_SHOW_COMMENTS=true
      - PHP_PG_ADMIN_SHOW_OIDS=false
      - PHP_PG_ADMIN_SHOW_SYSTEM=false
      - PHP_PG_ADMIN_THEME=default
      - PHP_PG_ADMIN_USE_XHTML_STRICT=false
    image: senzing/phppgadmin:${SENZING_DOCKER_IMAGE_VERSION_PHPPGADMIN:-latest}
    networks:
      - backend
    ports:
      - 9171:80
      - 9172:443
    restart: always

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - postgres
      - postgresinit
    environment:
#     See https://github.com/Senzing/docker-init-container#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_DELAY_IN_SECONDS: 30
    image: senzing/init-container:${SENZING_DOCKER_IMAGE_VERSION_INIT_CONTAINER:-latest}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  console:
    cap_add:
      - ALL
    container_name: senzing-console
    environment:
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
    image: senzing/senzing-console:${SENZING_DOCKER_IMAGE_VERSION_SENZING_CONSOLE:-latest}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - postgres
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-GENERIC}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-latest}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/redoer#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-latest}
    networks:
      - backend
    privileged: true
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  api:
    container_name: senzing-api-server
    depends_on:
      - postgres
    environment:
      SENZING_API_SERVER_ALLOWED_ORIGINS: '*'
      SENZING_API_SERVER_BIND_ADDR: 'all'
      SENZING_API_SERVER_ENABLE_ADMIN: 'true'
      SENZING_API_SERVER_PORT: '8250'
      SENZING_API_SERVER_SKIP_ENGINE_PRIMING: 'true'
      SENZING_API_SERVER_SKIP_STARTUP_PERF: 'true'
      SENZING_API_SERVER_INIT_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
    image: senzing/senzing-api-server:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-latest}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-api-server:8250
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: JWT
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:8251
      SENZING_WEB_SERVER_API_PATH: /api
      SENZING_WEB_SERVER_PORT: 8251
      SENZING_WEB_SERVER_URL: http://senzing-webapp:8251
    image: senzing/entity-search-web-app:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP:-latest}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

  jupyter:
    container_name: senzing-jupyter
    command:
      - start.sh
      - jupyter
      - notebook
      - "--NotebookApp.token=''"
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/docker-jupyter#configuration
      SENZING_SQL_CONNECTION: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@senzing-postgres:5432:${POSTGRES_DB:-G2}/"
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
    image: senzing/jupyter:${SENZING_DOCKER_IMAGE_VERSION_JUPYTER:-latest}
    networks:
      - backend
    ports:
      - 9178:8888
    restart: always
    volumes:
      - ${JUPYTER_NOTEBOOKS_SHARED_DIR:-~}:/notebooks/shared
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  sshd:
    cap_add:
      - ALL
    container_name: senzing-sshd
    environment:
      ROOT_PASSWORD: ${SENZING_SSHD_PASSWORD:-senzingsshdpassword}
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
    image: senzing/sshd:${SENZING_DOCKER_IMAGE_VERSION_SSHD:-latest}
    networks:
      - backend
    ports:
      - "${SENZING_SSHD_PORT:-9181}:22"
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  xterm:
    container_name: senzing-xterm
    environment:
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
    image: senzing/xterm:${SENZING_DOCKER_IMAGE_VERSION_XTERM:-latest}
    networks:
      - backend
    ports:
      - 8254:5000
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  swaggerui:
    container_name: senzing-swaggerui
    environment:
      URL: "https://raw.githubusercontent.com/Senzing/senzing-rest-api-specification/master/senzing-rest-api.yaml"
    image: swaggerapi/swagger-ui:${SENZING_DOCKER_IMAGE_VERSION_SWAGGERAPI_SWAGGER_UI:-v3.51.0}
    networks:
      - backend
    ports:
      - 9180:8080
    restart: always

networks:
  backend:
