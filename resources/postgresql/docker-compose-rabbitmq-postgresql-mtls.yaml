version: '3'
services:

  rabbitmq:
    container_name: senzing-rabbitmq
    environment:
#     See https://github.com/bitnami/bitnami-docker-rabbitmq#configuration
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
    image: bitnami/rabbitmq:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_RABBITMQ:-3.8.19-debian-10-r6}
    networks:
      - backend
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    volumes:
      - ${RABBITMQ_DIR}:/bitnami

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RABBITMQ_EXCHANGE: senzing-rabbitmq-exchange
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_ROUTING_KEY: senzing.records
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_RECORD_MAX: ${SENZING_RECORD_MAX:-5000}
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-rabbitmq
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-latest}
    networks:
      - backend
    restart: on-failure

  postgres:
    container_name: senzing-postgres
    environment:
#     See https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
      POSTGRES_DB: ${POSTGRES_DB:-G2}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: bitnami/postgresql:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_POSTGRESQL:-11.12.0-debian-10-r50}
    networks:
      - backend
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ${POSTGRES_DIR:-/var/lib/postgresql/data}:/var/lib/postgresql/data

  postgresinit:
    container_name: senzing-postgresql-init
    depends_on:
      - postgres
    environment:
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_SQL_FILE: /opt/senzing/g2/resources/schema/g2core-schema-postgresql-create.sql
    image: senzing/postgresql-client:${SENZING_DOCKER_IMAGE_VERSION_POSTGRESQL_CLIENT:-latest}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  phppgadmin:
    container_name: senzing-phppgadmin
    environment:
#     See https://hub.docker.com/r/bitnami/phppgadmin
      - DATABASE_HOST=senzing-postgres
    image: bitnami/phppgadmin:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_PHPPGADMIN:-latest}
    networks:
      - backend
    ports:
      - 9171:8080
      - 9172:443
    restart: always

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - postgres
      - postgresinit
    environment:
#     See https://github.com/Senzing/docker-init-container#configuration
      SENZING_API_SERVER_CLIENT_KEY_STORE_BASE64_ENCODED: "MIIE8gIBAzCCBJwGCSqGSIb3DQEHAaCCBI0EggSJMIIEhTCCBIEGCSqGSIb3DQEHBqCCBHIwggRuAgEAMIIEZwYJKoZIhvcNAQcBMGYGCSqGSIb3DQEFDTBZMDgGCSqGSIb3DQEFDDArBBTL8HhVYVtwVv6YV+012PZjMl17PgICJxACASAwDAYIKoZIhvcNAgkFADAdBglghkgBZQMEASoEEDcDbn92bvHnSymW02NNmf6AggPwuQY/fEM9sGZ1OkUkoF8mxqNC6CHfn+sFL2CskKY3EqxapQahGcV/SqiqYlYCcN99JyJdXmfHNKt4mX3BTshy8tsEvKd/ZvcBWNQCYf/SJ/cCpyMWTQVVwFx8Pk8E/d7XgsE8DOTiG+232uONWyY4plSTsHTAB+GTTfcdWWxdjHgP5BWD6PvklSDFtqYXJyeC+3STHFqKjoB04prmCMTJfYXATnuU/o57+2ECTButv9rlhUrVfNUikmPnL61+M1Lto7yOesNpuOVzEb8M4gjl4mZT96L9FZ/MQi5tUhrjjF8k8dYiOayWMkHGjtqNAbdXoQdkH/vGSxtOKn4Omy6TuRgR+z7zv+YS7kO6+Xc6wPvbO0EVfsQvTNBrRO/ae8137JHlOQcsLyKVCYV3abC3OWuq96MATadKT2yVdqvQWjIackLhq08ArywGvJm4dccfYujd+JZcHAyLmd+lG/qd5rRhK8prjEroEONF5X6bw5tqaEfHsMQyN6IhrROhtZH4XWrMJJ4qalEmSOwcmf51rNJrBFpUCpcRXB+YxVsLoKfFfT+i+fh6AEvBPreRZ70HgRW3mdOB7rLe1JlYNFaRr3Q+1/lk5DL+1Lx7PmyAuIQ3njWzgu0lk3JuHWXQLgL+JV+xT8HEV6140OW+9oasULQDqwhGT4aCwZqxLUx5Op8LpQflpWxBk4HZHSCjIVxGonm6rYxd2MDkEP6bWI5oBFT9m73h9fQxG8nMO0yhbDlKFJH4Hg295mH9RKeKTPLEDjwjMEaUKOXXwPmlwJ0RA+R0hAZU92Y/P1mcWCb8ENrdLU/KNkOstSEwa+noicAeyP8gbOzBUjSwBHCrchX3nqLRthEY/ANBeTG43gO3Rz2n1DOCIbiXpkqa8pApifzqhvbpqWMffHiKv1SogM8SVUPfXJh2TWE5ZvKhD/eQxNN+9Ki5YcPBpd9i41P6LzXYdEGu7XYWZTw66/xNgU3HgodDryaknlWICBsM3wc17WptvEKutKE4GNWkhKc3mABLue9jHec0GN/oNPZKxEGVjLQCGFfVLQJvyw01x00sijv8qj+PksIYXt3QeGU754rO8ZVYgCZBWCsJ97TclyLIhkZ1CNuRzBiKnOfQfZlsmvcRkADl3JNNJ3GOFnH2BTMPy/M/UykXff9ydL9YFs/26ocSI3fiPpoYj1SxPSX8qwN8aoNIxPR3c3f2V5MRxsBLw4ujKPWWdqWruMrN6KGwR8edxxnmKU/pfqo9L6nZqbe5DbL9VyOv7Njd1iviPhof+Mz/Urt/muPtmjqtRi/oeCD7Q5ZdwHBC2IbyGPO3DkqHiC+CkSExbYZT/uLb7ahdME0wMTANBglghkgBZQMEAgEFAAQgEBFlp3gwkhdsMvULwPeVVQN58qE3ZYpZgfTC0Rp9DCsEFGwO65hszqaXZXO83l2vw6I5USaJAgInEA=="
      SENZING_API_SERVER_KEY_STORE_BASE64_ENCODED: "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"
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_DELAY_IN_SECONDS: 30
    image: senzing/init-container:${SENZING_DOCKER_IMAGE_VERSION_INIT_CONTAINER:-latest}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - rabbitmq
      - postgres
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-G2}"
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-GENERIC}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_SUBCOMMAND: rabbitmq
    image: senzing/stream-loader:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-latest}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  api:
    container_name: senzing-api-server
    depends_on:
      - postgres
    environment:
      SENZING_API_SERVER_ALLOWED_ORIGINS: '*'
      SENZING_API_SERVER_BIND_ADDR: 'all'
      SENZING_API_SERVER_ENABLE_ADMIN: 'true'
      SENZING_API_SERVER_PORT: '8250'
      SENZING_API_SERVER_SKIP_ENGINE_PRIMING: 'true'
      SENZING_API_SERVER_SKIP_STARTUP_PERF: 'true'
      SENZING_API_SERVER_INIT_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-senzing-postgres}:${POSTGRES_PORT:-5432}:${POSTGRES_DB:-G2}/"
          }
        }
    image: senzing/senzing-api-server:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-latest}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

networks:
  backend:
