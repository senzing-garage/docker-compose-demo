version: '3'
services:

  mssql:
    container_name: senzing-mssql
    environment:
#     See https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
      MSSQL_PID: ${MSSQL_PID:-Developer}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Passw0rd}
    image: mcr.microsoft.com/mssql/server:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_SERVER:-2019-GA-ubuntu-16.04}
    networks:
      - backend
    ports:
      - 1433:1433
    restart: always
    volumes:
      - ${MSSQL_DIR:-/var/opt/mssql}:/var/opt/mssql

  mssql-create-db:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - ${MSSQL_HOST:-senzing-mssql},${MSSQL_PORT:-1433}
      - -U
      - sa
    container_name: senzing-mssql-create-database
    depends_on:
      - mssql
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure

  mssql-create-senzing:
#   For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing
    depends_on:
      - mssql-create-db
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  mssql-res:
    container_name: senzing-mssql-res
    environment:
#     See https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
      MSSQL_PID: ${MSSQL_PID:-Developer}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Passw0rd}
    image: mcr.microsoft.com/mssql/server:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_SERVER:-2019-GA-ubuntu-16.04}
    networks:
      - backend
    ports:
      - 55667:1433
    restart: always
    volumes:
      - ${MSSQL_DIR_RES:-/var/opt/mssql_res}:/var/opt/mssql

  mssql-create-db-res:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - ${MSSQL_HOST_LIBFEAT:-senzing-mssql-res},${MSSQL_PORT_RES:-1433}
      - -U
      - sa
    container_name: senzing-mssql-create-database-res
    depends_on:
      - mssql-res
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure

  mssql-create-senzing-res:
#   For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql-res
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing-res
    depends_on:
      - mssql-create-db-res
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  mssql-libfeat:
    container_name: senzing-mssql-libfeat
    environment:
#     See https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
      MSSQL_PID: ${MSSQL_PID:-Developer}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Passw0rd}
    image: mcr.microsoft.com/mssql/server:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_SERVER:-2019-GA-ubuntu-16.04}
    networks:
      - backend
    ports:
      - 55668:1433
    restart: always
    volumes:
      - ${MSSQL_DIR_LIBFEAT:-/var/opt/mssql_libfeat}:/var/opt/mssql

  mssql-create-db-libfeat:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - ${MSSQL_HOST_LIBFEAT:-senzing-mssql-libfeat},${MSSQL_PORT_LIBFEAT:-1433}
      - -U
      - sa
    container_name: senzing-mssql-create-database-libfeat
    depends_on:
      - mssql-libfeat
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure

  mssql-create-senzing-libfeat:
#   For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql-libfeat
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing-libfeat
    depends_on:
      - mssql-create-db-libfeat
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  adminer:
    container_name: senzing-adminer
    environment:
      ADMINER_DEFAULT_SERVER: senzing-mssql
    image: senzing/adminer:${SENZING_DOCKER_IMAGE_VERSION_ADMINER:-latest}
    networks:
      - backend
    ports:
      - 9177:8080
    restart: always

  rabbitmq:
    container_name: senzing-rabbitmq
    environment:
#     See https://github.com/bitnami/bitnami-docker-rabbitmq#configuration
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
    image: bitnami/rabbitmq:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_RABBITMQ:-3.8.19-debian-10-r6}
    networks:
      - backend
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    volumes:
      - ${RABBITMQ_DIR}:/bitnami

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_RECORD_MAX: ${SENZING_RECORD_MAX:-5000}
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-rabbitmq
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-latest}
    networks:
      - backend
    restart: on-failure

  mssql-create-db:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - ${MSSQL_HOST:-senzing-mssql},${MSSQL_PORT:-1433}
      - -U
      - sa
    container_name: senzing-mssql-create-database
    depends_on:
      - mssql
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure

  mssql-create-senzing:
#   For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing
    depends_on:
      - mssql-create-db
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - mssql
      - mssql-create-db
      - mssql-create-senzing
    environment:
      LD_LIBRARY_PATH: /opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/IBM/db2/clidriver/lib:/opt/microsoft/msodbcsql17/lib64
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_OPT_MICROSOFT_MSODBCSQL17_ETC_ODBC_INI_CONTENTS: |
        [G2]
        Database = G2
        Description = Senzing MS SQL database for G2
        Driver = ODBC Driver 17 for SQL Server
        Server = senzing-mssql,1433
        [G2_LIBFEAT]
        Database = G2
        Description = Senzing MS SQL database for G2
        Driver = ODBC Driver 17 for SQL Server
        Server = senzing-mssql-libfeat,1433
        [G2_RES]
        Database = G2
        Description = Senzing MS SQL database for G2
        Driver = ODBC Driver 17 for SQL Server
        Server = senzing-mssql-res,1433
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
    image: senzing/init-container:${SENZING_DOCKER_IMAGE_VERSION_INIT_CONTAINER:-latest}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  console:
    cap_add:
      - ALL
    container_name: senzing-console
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
    image: senzing/senzing-console:${SENZING_DOCKER_IMAGE_VERSION_SENZING_CONSOLE:-latest}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - rabbitmq
      - mssql-create-senzing
    environment:
      LC_CTYPE: en_US.utf8
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-GENERIC}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_SUBCOMMAND: rabbitmq
    image: senzing/stream-loader:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-latest}
    networks:
      - backend
    restart: always
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
#     See https://github.com/Senzing/redoer#configuration
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-latest}
    networks:
      - backend
    privileged: true
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  api:
    container_name: senzing-api-server
    depends_on:
      - mssql-create-senzing
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_API_SERVER_ALLOWED_ORIGINS: '*'
      SENZING_API_SERVER_BIND_ADDR: 'all'
      SENZING_API_SERVER_ENABLE_ADMIN: 'true'
      SENZING_API_SERVER_PORT: '8250'
      SENZING_API_SERVER_SKIP_ENGINE_PRIMING: 'true'
      SENZING_API_SERVER_SKIP_STARTUP_PERF: 'true'
      SENZING_API_SERVER_INIT_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
    image: senzing/senzing-api-server:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-latest}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-api-server:8250
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: JWT
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:8251
      SENZING_WEB_SERVER_API_PATH: /api
      SENZING_WEB_SERVER_PORT: 8251
      SENZING_WEB_SERVER_URL: http://senzing-webapp:8251
    image: senzing/entity-search-web-app:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP:-latest}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

  jupyter:
    container_name: senzing-jupyter
    command:
      - start.sh
      - jupyter
      - notebook
      - "--NotebookApp.token=''"
    depends_on:
      - loader
    environment:
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
    image: senzing/jupyter:${SENZING_DOCKER_IMAGE_VERSION_JUPYTER:-latest}
    networks:
      - backend
    ports:
      - 9178:8888
    restart: always
    volumes:
      - ${JUPYTER_NOTEBOOKS_SHARED_DIR:-~}:/notebooks/shared
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  sshd:
    cap_add:
      - ALL
    container_name: senzing-sshd
    environment:
      ROOT_PASSWORD: ${SENZING_SSHD_PASSWORD:-senzingsshdpassword}
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
    image: senzing/sshd:${SENZING_DOCKER_IMAGE_VERSION_SSHD:-latest}
    networks:
      - backend
    ports:
      - "${SENZING_SSHD_PORT:-9181}:22"
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  xterm:
    container_name: senzing-xterm
    environment:
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_RES:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE_LIBFEAT:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
    image: senzing/xterm:${SENZING_DOCKER_IMAGE_VERSION_XTERM:-latest}
    networks:
      - backend
    ports:
      - 8254:5000
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft

  swaggerui:
    container_name: senzing-swaggerui
    environment:
      URL: "https://raw.githubusercontent.com/Senzing/senzing-rest-api-specification/master/senzing-rest-api.yaml"
    image: swaggerapi/swagger-ui:${SENZING_DOCKER_IMAGE_VERSION_SWAGGERAPI_SWAGGER_UI:-v3.51.0}
    networks:
      - backend
    ports:
      - 9180:8080
    restart: always

networks:
  backend:
