version: '3'
services:

  # makefile makes the odbc.ini file

  makefile:
    container_name: senzing-makefile
    command:
      - sh
      - -c
      - mkdir -p /var/opt/senzing/mssql; echo "$${FILE_CONTENTS}" >> /var/opt/senzing/mssql/odbc.ini
    environment:
      FILE_CONTENTS: |
        [${MSSQL_DATABASE:-G2}]
        Database = ${MSSQL_DATABASE:-G2}
        Description = Senzing MS SQL database for G2
        Driver = ODBC Driver 17 for SQL Server
        Server = ${MSSQL_HOST:-senzing-mssql},${MSSQL_PORT:-1433}
    image: busybox:${SENZING_DOCKER_IMAGE_VERSION_BUSYBOX:-latest}
    networks:
      - senzing
    read_only: true
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  zookeeper:
    container_name: senzing-zookeeper
    environment:
      # See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_ZOOKEEPER:-latest}
    networks:
      - senzing
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
      # See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://senzing-kafka:9092"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_KAFKA:-latest}
    networks:
      - senzing
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
      # See https://github.com/obsidiandynamics/kafdrop#environment-variables
      JVM_OPTS: "-Xms32M -Xmx64M"
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:${SENZING_DOCKER_IMAGE_VERSION_OBSIDIANDYNAMICS_KAFDROP:-latest}
    networks:
      - senzing
    ports:
      - 9179:9000
    restart: always

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - kafka
    environment:
      # See https://github.com/Senzing/stream-producer#configuration
      SENZING_DEFAULT_DATA_SOURCE: ${SENZING_DEFAULT_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: json-to-kafka
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  mssql:
    container_name: senzing-mssql
    environment:
      # See https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
      MSSQL_PID: ${MSSQL_PID:-Developer}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Passw0rd}
    image: mcr.microsoft.com/mssql/server:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_SERVER:-latest}
    networks:
      - senzing
    ports:
      - 1433:1433
    restart: always
    user: "0"
    volumes:
      - ${MSSQL_DIR:-/var/opt/mssql}:/var/opt/mssql

  adminer:
    container_name: senzing-adminer
    environment:
      ADMINER_DEFAULT_SERVER: senzing-mssql
    image: senzing/adminer:${SENZING_DOCKER_IMAGE_VERSION_ADMINER:-latest}
    networks:
      - senzing
    ports:
      - 9177:8080
    restart: always

  mssql-create-db:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - ${MSSQL_HOST:-senzing-mssql},${MSSQL_PORT:-1433}
      - -U
      - sa
    container_name: senzing-mssql-create-database
    depends_on:
      - mssql
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - senzing
    restart: on-failure

  mssql-create-senzing:
    # For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing
    depends_on:
      - mssql-create-db
    image: mcr.microsoft.com/mssql-tools:${SENZING_DOCKER_IMAGE_VERSION_MSSQL_TOOLS:-latest}
    networks:
      - senzing
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - mssql
      - mssql-create-db
      - mssql-create-senzing
    environment:
      LD_LIBRARY_PATH: /opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/IBM/db2/clidriver/lib:/opt/microsoft/msodbcsql17/lib64
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_HOST:-senzing-mssql}:${MSSQL_PORT:-1433}/${MSSQL_DATABASE:-G2}"
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_GID: ${SENZING_GID:-1001}
      SENZING_UID: ${SENZING_UID:-1001}
    image: senzing/init-container:${SENZING_DOCKER_IMAGE_VERSION_INIT_CONTAINER:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  console:
    cap_add:
      - ALL
    container_name: senzing-console
    environment:
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
    image: senzing/senzing-console-mssql:${SENZING_DOCKER_IMAGE_VERSION_SENZING_CONSOLE:-latest}
    networks:
      - senzing
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  g2configtool:
    command:
      - /bin/bash
      - -c
      - echo "$${SENZING_G2CONFIG_GTC}" >> /tmp/G2Config.gtc; sleep $${SENZING_DELAY_IN_SECONDS}; /opt/senzing/g2/python/G2ConfigTool.py -f /tmp/G2Config.gtc
    container_name: senzing-g2configtools
    depends_on:
      - initcontainer
    environment:
      LC_CTYPE: en_US.utf8
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      # See https://github.com/Senzing/g2configtool
      SENZING_DELAY_IN_SECONDS: 10
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
      SENZING_G2CONFIG_GTC: |
        addDataSource CUSTOMERS
        addDataSource REFERENCE
        addDataSource WATCHLIST
        save
    image: senzing/senzingapi-tools-mssql:${SENZING_DOCKER_IMAGE_VERSION_SENZINGAPI_TOOLS:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure
    tmpfs:
      - /tmp
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - mssql-create-senzing
    environment:
      LC_CTYPE: en_US.utf8
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      # See https://github.com/Senzing/stream-loader#configuration
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader-mssql:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-latest}
    networks:
      - senzing
    read_only: true
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      # See https://github.com/Senzing/redoer#configuration
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
      SENZING_EXIT_ON_THREAD_TERMINATION: ${SENZING_EXIT_ON_THREAD_TERMINATION:-"false"}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer-mssql:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-latest}
    networks:
      - senzing
    read_only: true
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  pocserver:
    container_name: senzing-poc-server
    environment:
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_API_SERVER_ALLOWED_ORIGINS: '*'
      SENZING_API_SERVER_BIND_ADDR: 'all'
      SENZING_API_SERVER_ENABLE_ADMIN: 'true'
      SENZING_API_SERVER_PORT: '8250'
      SENZING_API_SERVER_SKIP_ENGINE_PRIMING: 'true'
      SENZING_API_SERVER_SKIP_STARTUP_PERF: 'true'
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
      SENZING_KAFKA_LOAD_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_LOAD_GROUP: senzing-kafka-group
      SENZING_KAFKA_LOAD_TOPIC: senzing-kafka-topic
    image: senzing/senzing-poc-server-mssql:${SENZING_DOCKER_IMAGE_VERSION_SENZING_POC_SERVER:-latest}
    networks:
      - senzing
    ports:
      - 8250:8250
    read_only: true
    restart: always
    tmpfs:
      - /tmp
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  webapp:
    container_name: senzing-webapp
    depends_on:
      - pocserver
      - webapp-console
    environment:
      # See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-poc-server:8250
      SENZING_CONSOLE_SERVER_URL: ws://senzing-webapp-console:8257
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: NONE
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:8251
      SENZING_WEB_SERVER_INTERNAL_URL: http://senzing-webapp:8251
      SENZING_WEB_SERVER_PORT: 8251
      SENZING_WEB_SERVER_STREAM_CLIENT_URL: wss://senzing-poc-server:8250/ws
    image: senzing/entity-search-web-app:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP:-latest}
    networks:
      - senzing
    ports:
      - 8251:8251
      - 8257:8257
    read_only: true
    restart: always

  webapp-console:
    container_name: senzing-webapp-console
    environment:
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_CONSOLE_SERVER_PORT: 8257
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
    image: senzing/entity-search-web-app-console:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP_CONSOLE:-latest}
    networks:
      - senzing
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  sshd:
    cap_add:
      - ALL
    container_name: senzing-sshd
    environment:
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      ROOT_PASSWORD: ${SENZING_SSHD_PASSWORD:-senzingsshdpassword}
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
    image: senzing/sshd-mssql:${SENZING_DOCKER_IMAGE_VERSION_SSHD:-latest}
    networks:
      - senzing
    ports:
      - "${SENZING_SSHD_PORT:-9181}:22"
    restart: always
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  xterm:
    container_name: senzing-xterm
    environment:
      ODBCINI: /var/opt/senzing/mssql/odbc.ini
      ODBCSYSINI: /opt/microsoft/msodbcsql17/etc
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@${MSSQL_DATABASE:-G2}"
          }
        }
    image: senzing/xterm-mssql:${SENZING_DOCKER_IMAGE_VERSION_XTERM:-latest}
    networks:
      - senzing
    ports:
      - 8254:5000
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

networks:
  senzing:
    name: ${SENZING_DOCKER_NETWORK:-senzing-network}
