version: '3'
services:

  initdatabase:
    container_name: senzing-tools-initdatabase
    command: initdatabase
    environment:
      SENZING_TOOLS_DATASOURCES: CUSTOMERS REFERENCE WATCHLIST
      SENZING_TOOLS_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "sqlite3://na:na@/var/opt/senzing/sqlite/G2C.db"
          }
        }
    image: senzing/senzing-tools:${SENZING_DOCKER_IMAGE_VERSION_SENZING_TOOLS:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  sqliteweb:
    container_name: senzing-sqlite-web
    depends_on:
      - initdatabase
    environment:
      SQLITE_DATABASE: G2C.db
    image: coleifer/sqlite-web:${SENZING_DOCKER_IMAGE_VERSION_SQLITE_WEB:-latest}
    networks:
      - senzing
    ports:
      - 9174:8080
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}/sqlite:/data

  console:
    container_name: senzing-console
    environment:
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "CONNECTION": "sqlite3://na:na@/var/opt/senzing/sqlite/G2C.db"
          }
        }
    image: senzing/senzing-console:${SENZING_DOCKER_IMAGE_VERSION_SENZING_CONSOLE:-latest}
    networks:
      - senzing
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  resolver:
    container_name: senzing-resolver
    environment:
      # See https://github.com/Senzing/resolver#configuration
      SENZING_SUBCOMMAND: service
    image: senzing/resolver:${SENZING_DOCKER_IMAGE_VERSION_RESOLVER:-latest}
    networks:
      - senzing
    ports:
      - 8252:8252
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

networks:
  senzing:
    name: ${SENZING_DOCKER_NETWORK:-senzing-network}
