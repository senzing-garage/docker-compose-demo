version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_ZOOKEEPER:-latest}
    networks:
      - senzing
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://senzing-kafka:9092"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_KAFKA:-latest}
    networks:
      - senzing
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
#     See https://github.com/obsidiandynamics/kafdrop#environment-variables
      JVM_OPTS: "-Xms32M -Xmx64M"
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:${SENZING_DOCKER_IMAGE_VERSION_OBSIDIANDYNAMICS_KAFDROP:-latest}
    networks:
      - senzing
    ports:
      - 9179:9000
    restart: always

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/stream-producer#configuration
      SENZING_DEFAULT_DATA_SOURCE: ${SENZING_DEFAULT_DATA_SOURCE:-TEST}
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: json-to-kafka
    image: senzing/stream-producer:${SENZING_DOCKER_IMAGE_VERSION_STREAM_PRODUCER:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  mysql:
    container_name: senzing-mysql
    environment:
#     See https://hub.docker.com/_/mysql/ "Environment Variables"
      MYSQL_DATABASE: ${MYSQL_DATABASE:-G2}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-g2}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_USER: ${MYSQL_USERNAME:-g2}
    image: bitnami/mysql:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_MYSQL:-latest}
    networks:
      - senzing
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ${MYSQL_DIR:-/var/lib/mysql}:/var/lib/mysql

  init-mysql:
    container_name: senzing-init-mysql
    depends_on:
      - mysql
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/init-mysql#configuration
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
      SENZING_SUBCOMMAND: mandatory
    image: senzing/init-mysql:${SENZING_DOCKER_IMAGE_VERSION_INIT_MYSQL:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure

  phpmyadmin:
    container_name: senzing-phpmyadmin
    depends_on:
      - mysql
    environment:
      DATABASE_HOST: mysql
    image: bitnami/phpmyadmin:${SENZING_DOCKER_IMAGE_VERSION_BITNAMI_PHPMYADMIN:-latest}
    networks:
      - senzing
    ports:
      - 9173:8080
    restart: always

  console:
    cap_add:
      - ALL
    container_name: senzing-console
    environment:
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
    image: senzing/senzing-console-mysql:${SENZING_DOCKER_IMAGE_VERSION_SENZING_CONSOLE:-latest}
    networks:
      - senzing
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  g2configtool:
    command:
      - /bin/bash
      - -c
      - echo "$${SENZING_G2CONFIG_GTC}" >> /tmp/G2Config.gtc; sleep $${SENZING_DELAY_IN_SECONDS}; /opt/senzing/g2/python/G2ConfigTool.py -f /tmp/G2Config.gtc
    container_name: senzing-g2configtools
    depends_on:
      - init-mysql
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/g2configtool
      SENZING_DELAY_IN_SECONDS: 10
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
      SENZING_G2CONFIG_GTC: |
        addDataSource CUSTOMERS
        addDataSource REFERENCE
        addDataSource WATCHLIST
        save
    image: senzing/senzingapi-tools:${SENZING_DOCKER_IMAGE_VERSION_SENZINGAPI_TOOLS:-latest}
    networks:
      - senzing
    read_only: true
    restart: on-failure
    tmpfs:
      - /tmp

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - mysql
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader-mysql:${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER:-latest}
    networks:
      - senzing
    read_only: true
    restart: always

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/redoer#configuration
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
      SENZING_EXIT_ON_THREAD_TERMINATION: ${SENZING_EXIT_ON_THREAD_TERMINATION:-"false"}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-60}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer-mysql:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-latest}
    networks:
      - senzing
    read_only: true
    restart: always

  api:
    container_name: senzing-api-server
    depends_on:
      - mysql
    environment:
      SENZING_API_SERVER_ALLOWED_ORIGINS: '*'
      SENZING_API_SERVER_BIND_ADDR: 'all'
      SENZING_API_SERVER_ENABLE_ADMIN: 'true'
      SENZING_API_SERVER_PORT: '8250'
      SENZING_API_SERVER_SKIP_ENGINE_PRIMING: 'true'
      SENZING_API_SERVER_SKIP_STARTUP_PERF: 'true'
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
    image: senzing/senzing-api-server-mysql:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-latest}
    networks:
      - senzing
    ports:
      - 8250:8250
    read_only: true
    restart: always
    tmpfs:
      - /tmp

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
      - webapp-console
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: http://senzing-api-server:8250
      SENZING_WEB_SERVER_ADMIN_AUTH_MODE: JWT
      SENZING_WEB_SERVER_ADMIN_AUTH_PATH: http://senzing-webapp:8251
      SENZING_WEB_SERVER_API_PATH: /api
      SENZING_WEB_SERVER_PORT: 8251
      SENZING_WEB_SERVER_URL: http://localhost:8251
      SENZING_CONSOLE_SERVER_URL: ws://senzing-webapp-console:8257
    image: senzing/entity-search-web-app:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP:-latest}
    networks:
      - senzing
    ports:
      - 8251:8251
      - 8257:8257
    read_only: true
    restart: always

  webapp-console:
    container_name: senzing-webapp-console
    environment:
      SENZING_CONSOLE_SERVER_PORT: 8257
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
    image: senzing/entity-search-web-app-console-mysql:${SENZING_DOCKER_IMAGE_VERSION_ENTITY_SEARCH_WEB_APP_CONSOLE:-latest}
    networks:
      - senzing
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  sshd:
    cap_add:
      - ALL
    container_name: senzing-sshd
    environment:
      ROOT_PASSWORD: ${SENZING_SSHD_PASSWORD:-senzingsshdpassword}
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
    image: senzing/sshd-mysql:${SENZING_DOCKER_IMAGE_VERSION_SSHD:-latest}
    networks:
      - senzing
    ports:
      - "${SENZING_SSHD_PORT:-9181}:22"
    restart: always
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  xterm:
    container_name: senzing-xterm
    environment:
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "LICENSESTRINGBASE64": "${SENZING_LICENSE_BASE64_ENCODED}",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "SQL",
            "CONNECTION": "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@${MYSQL_HOST:-senzing-mysql}:${MYSQL_PORT:-3306}/?schema=${MYSQL_DATABASE:-G2}"
          }
        }
    image: senzing/xterm-mysql:${SENZING_DOCKER_IMAGE_VERSION_XTERM:-latest}
    networks:
      - senzing
    ports:
      - 8254:5000
    restart: always
    user: ${SENZING_UID:-1001}:${SENZING_GID:-1001}
    volumes:
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

networks:
  senzing:
    name: ${SENZING_DOCKER_NETWORK:-senzing-network}
